//// 
// Syntax of Lambda calclus:

// <var> := a|b|c|...|z
// <exp> := <var> | (\<var> <exp>) | (<exp> <exp)















////
// Simplest lambda calculus program


















////
// Getting to the truth of the matter


















////
// Eager or Lazy?


















////
// Making tuples out of closures
// (\a \b \z (z a b))

















////
// (\z z a b) (\x \y x)
// ((\x \y x) a b)
// a




// (\z z a b) (\x \y y)
// ((\x \y y) a b)
// b









////
// Lists from Tuples
// (\i (Cons b0 (Cons b1 Nil)))

















////
// List processing
// (L M N)

















////
// The missing piece, recursion


















////
// Putting it all together. 
// Write a program that reverses the input

















////
// Other demos: 
// hilbert
// primes.dec
// Self interpreter (uni344)
